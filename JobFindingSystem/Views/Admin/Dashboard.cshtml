
@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}
@section header{
    <!-- Styles -->
    <style>
        #chartdiv {
            width: 100%;
            height: 500px;
            font-size: 11px;
        }

        .amcharts-pie-slice {
            transform: scale(1);
            transform-origin: 50% 50%;
            transition-duration: 0.3s;
            transition: all .3s ease-out;
            -webkit-transition: all .3s ease-out;
            -moz-transition: all .3s ease-out;
            -o-transition: all .3s ease-out;
            cursor: pointer;
            box-shadow: 0 0 30px 0 #000;
        }

            .amcharts-pie-slice:hover {
                transform: scale(1.1);
                filter: url(#shadow);
            }
    </style>

    <!-- Resources -->
    <script src="https://www.amcharts.com/lib/3/amcharts.js"></script>
    <script src="https://www.amcharts.com/lib/3/pie.js"></script>
    <script src="https://www.amcharts.com/lib/3/serial.js"></script>
    <script src="https://www.amcharts.com/lib/3/plugins/export/export.min.js"></script>
    <link rel="stylesheet" href="https://www.amcharts.com/lib/3/plugins/export/export.css" type="text/css" media="all" />
}

<!-- Chart code -->
@* Skills in Job category *@
@*<script>
        let url = "/Report/Data";
        let param = {};
        var dataFile;

        $.getJSON(url, param, function () {
        }).done(function (json) {
            var chart = AmCharts.makeChart("chartdiv", {
                "type": "pie",
                "startDuration": 0,
                "theme": "none",
                "addClassNames": true,
                "legend": {
                    "position": "right",
                    "marginRight": 100,
                    "autoMargins": false
                },
                "innerRadius": "30%",
                "defs": {
                    "filter": [{
                        "id": "shadow",
                        "width": "200%",
                        "height": "200%",
                        "feOffset": {
                            "result": "offOut",
                            "in": "SourceAlpha",
                            "dx": 0,
                            "dy": 0
                        },
                        "feGaussianBlur": {
                            "result": "blurOut",
                            "in": "offOut",
                            "stdDeviation": 5
                        },
                        "feBlend": {
                            "in": "SourceGraphic",
                            "in2": "blurOut",
                            "mode": "normal"
                        }
                    }]
                },
                "dataProvider": json,
                "valueField": "skills",
                "titleField": "jobcategory",
                "export": {
                    "enabled": true
                }
            });

            chart.addListener("init", handleInit);

            chart.addListener("rollOverSlice", function (e) {
                handleRollOver(e);
            });

            function handleInit() {
                chart.legend.addListener("rollOverItem", handleRollOver);
            }

            function handleRollOver(e) {
                var wedge = e.dataItem.wedge.node;
                wedge.parentNode.appendChild(wedge);
            }
        });
    </script>*@
@* &Skills in Job category *@

@* Account role quantity *@
@*<script>
        let url = "/Report/DataAccountRole";
        let param = {};
        var dataFile;

        $.getJSON(url, param, function () {
        }).done(function (json) {
            var chart = AmCharts.makeChart("chartdiv", {
                "type": "pie",
                "startDuration": 0,
                "theme": "none",
                "addClassNames": true,
                "legend": {
                    "position": "right",
                    "marginRight": 100,
                    "autoMargins": false
                },
                "innerRadius": "30%",
                "defs": {
                    "filter": [{
                        "id": "shadow",
                        "width": "200%",
                        "height": "200%",
                        "feOffset": {
                            "result": "offOut",
                            "in": "SourceAlpha",
                            "dx": 0,
                            "dy": 0
                        },
                        "feGaussianBlur": {
                            "result": "blurOut",
                            "in": "offOut",
                            "stdDeviation": 5
                        },
                        "feBlend": {
                            "in": "SourceGraphic",
                            "in2": "blurOut",
                            "mode": "normal"
                        }
                    }]
                },
                "dataProvider": json,
                "valueField": "number",
                "titleField": "role",
                "export": {
                    "enabled": true
                }
            });

            chart.addListener("init", handleInit);

            chart.addListener("rollOverSlice", function (e) {
                handleRollOver(e);
            });

            function handleInit() {
                chart.legend.addListener("rollOverItem", handleRollOver);
            }

            function handleRollOver(e) {
                var wedge = e.dataItem.wedge.node;
                wedge.parentNode.appendChild(wedge);
            }
        });
    </script>*@
@* &Account role quantity *@

@* job category with post quantity *@
@*<script>
        let url = "/Report/DataPostNJobCategory";
        let param = {};
        var dataFile;

        $.getJSON(url, param, function () {
        }).done(function (json) {
            var chart = AmCharts.makeChart("chartdiv", {
                "type": "pie",
                "startDuration": 0,
                "theme": "none",
                "addClassNames": true,
                "legend": {
                    "position": "right",
                    "marginRight": 100,
                    "autoMargins": false
                },
                "innerRadius": "30%",
                "defs": {
                    "filter": [{
                        "id": "shadow",
                        "width": "200%",
                        "height": "200%",
                        "feOffset": {
                            "result": "offOut",
                            "in": "SourceAlpha",
                            "dx": 0,
                            "dy": 0
                        },
                        "feGaussianBlur": {
                            "result": "blurOut",
                            "in": "offOut",
                            "stdDeviation": 5
                        },
                        "feBlend": {
                            "in": "SourceGraphic",
                            "in2": "blurOut",
                            "mode": "normal"
                        }
                    }]
                },
                "dataProvider": json,
                "valueField": "number",
                "titleField": "jobcategory",
                "export": {
                    "enabled": true
                }
            });

            chart.addListener("init", handleInit);

            chart.addListener("rollOverSlice", function (e) {
                handleRollOver(e);
            });

            function handleInit() {
                chart.legend.addListener("rollOverItem", handleRollOver);
            }

            function handleRollOver(e) {
                var wedge = e.dataItem.wedge.node;
                wedge.parentNode.appendChild(wedge);
            }
        });
    </script>*@
@* &job category with post quantity *@

@* Register user type *@
@*<script>
        let url = "/Report/DataMonthlyUserRegister";
        let param = {};
        var dataFile;

        $.getJSON(url, param, function () {
        }).done(function (json) {
            var chart = AmCharts.makeChart("chartdiv", {
                "type": "serial",
                "theme": "none",
                "categoryField": "date",
                "rotate": true,
                "startDuration": 1,
                "categoryAxis": {
                    "gridPosition": "start",
                    "position": "left"
                },
                "trendLines": [],
                "graphs": [
                    {
                        "balloonText": "Admin:[[value]]",
                        "fillAlphas": 0.8,
                        "id": "AmGraph-1",
                        "lineAlpha": 0.2,
                        "title": "Admin",
                        "type": "column",
                        "valueField": "admin"
                    },
                    {
                        "balloonText": "Employer:[[value]]",
                        "fillAlphas": 0.8,
                        "id": "AmGraph-2",
                        "lineAlpha": 0.2,
                        "title": "Employer",
                        "type": "column",
                        "valueField": "employer"
                    },
                    {
                        "balloonText": "Employee:[[value]]",
                        "fillAlphas": 0.8,
                        "id": "AmGraph-3",
                        "lineAlpha": 0.2,
                        "title": "Employee",
                        "type": "column",
                        "valueField": "employee"
                    }
                ],
                "guides": [],
                "valueAxes": [
                    {
                        "id": "ValueAxis-1",
                        "position": "top",
                        "axisAlpha": 0
                    }
                ],
                "allLabels": [],
                "balloon": {},
                "titles": [],
                "dataProvider": json,
                "export": {
                    "enabled": true
                }

            });
        });

    </script>*@
@* Register user type *@

@* employee skill analyst *@
@*<script>
        let url = "/Report/DataEmployeeSkillAnalyst";
        let param = {};
        var dataFile;

        $.getJSON(url, param, function () {
        }).done(function (json) {
            var chart = AmCharts.makeChart("chartdiv", {
                "type": "pie",
                "startDuration": 0,
                "theme": "none",
                "addClassNames": true,
                "legend": {
                    "position": "right",
                    "marginRight": 100,
                    "autoMargins": false
                },
                "innerRadius": "30%",
                "defs": {
                    "filter": [{
                        "id": "shadow",
                        "width": "200%",
                        "height": "200%",
                        "feOffset": {
                            "result": "offOut",
                            "in": "SourceAlpha",
                            "dx": 0,
                            "dy": 0
                        },
                        "feGaussianBlur": {
                            "result": "blurOut",
                            "in": "offOut",
                            "stdDeviation": 5
                        },
                        "feBlend": {
                            "in": "SourceGraphic",
                            "in2": "blurOut",
                            "mode": "normal"
                        }
                    }]
                },
                "dataProvider": json,
                "valueField": "totalProfit",
                "titleField": "jobcategory",
                "export": {
                    "enabled": true
                }
            });

            chart.addListener("init", handleInit);

            chart.addListener("rollOverSlice", function (e) {
                handleRollOver(e);
            });

            function handleInit() {
                chart.legend.addListener("rollOverItem", handleRollOver);
            }

            function handleRollOver(e) {
                var wedge = e.dataItem.wedge.node;
                wedge.parentNode.appendChild(wedge);
            }
        });
    </script>*@
@* &employee skill analyst *@

@* Employee profit *@
@*<script>
    let url = "/Report/DataEmployeeProfit";
    let param = {};
    var dataFile;

    $.getJSON(url, param, function () {
    }).done(function (json) {
        var chart = AmCharts.makeChart("chartdiv", {
            "theme": "none",
            "type": "serial",
            "marginRight": 80,
            "autoMarginOffset": 20,
            "marginTop": 20,
            "dataProvider": json,
            "valueAxes": [{
                "id": "v1",
                "axisAlpha": 0.1
            }],
            "graphs": [{
                "useNegativeColorIfDown": true,
                "balloonText": "[[category]]<br><b>value: [[value]]</b>",
                "bullet": "round",
                "bulletBorderAlpha": 1,
                "bulletBorderColor": "#FFFFFF",
                "hideBulletsCount": 50,
                "lineThickness": 2,
                "lineColor": "#fdd400",
                "negativeLineColor": "#67b7dc",
                "valueField": "totalProfit"
            }],
            "chartScrollbar": {
                "scrollbarHeight": 5,
                "backgroundAlpha": 0.1,
                "backgroundColor": "#868686",
                "selectedBackgroundColor": "#67b7dc",
                "selectedBackgroundAlpha": 1
            },
            "chartCursor": {
                "valueLineEnabled": true,
                "valueLineBalloonEnabled": true
            },
            "categoryField": "date",
            "categoryAxis": {
                "parseDates": true,
                "axisAlpha": 0,
                "minHorizontalGap": 60
            },
            "export": {
                "enabled": true
            }
        });

        chart.addListener("dataUpdated", zoomChart);
        //zoomChart();

        function zoomChart() {
            if (chart.zoomToIndexes) {
                chart.zoomToIndexes(130, chartData.length - 1);
            }
        }
    });
</script>*@
@* &Employee profit *@

@* Employer post and employment *@
    <script>
        let url = "/Report/DataEmployerPostNEmploy";
        let param = {};
        var dataFile;

        $.getJSON(url, param, function () {
        }).done(function (json) {
            var chart = AmCharts.makeChart("chartdiv", {
                "theme": "none",
                "type": "serial",
                "dataProvider": json,
                "valueAxes": [{
                    "stackType": "3d",
                    "unit": "(MYR)",
                    "position": "left",
                    "title": "RM",
                }],
                "startDuration": 1,
                "graphs": [{
                    "balloonText": " [[category]]: <b>[[value]]</b>",
                    "fillAlphas": 0.9,
                    "lineAlpha": 0.2,
                    "title": "Total post fee",
                    "type": "column",
                    "valueField": "postFee"
                }, {
                    "balloonText": "[[category]]: <b>[[value]]</b>",
                    "fillAlphas": 0.9,
                    "lineAlpha": 0.2,
                    "title": "Total employ fee",
                    "type": "column",
                    "valueField": "employFee"
                }],
                "plotAreaFillAlphas": 0.1,
                "depth3D": 60,
                "angle": 30,
                "categoryField": "date",
                "categoryAxis": {
                    "gridPosition": "start"
                },
                "export": {
                    "enabled": true
                }
            });
            jQuery('.chart-input').off().on('input change', function () {
                var property = jQuery(this).data('property');
                var target = chart;
                chart.startDuration = 0;

                if (property == 'topRadius') {
                    target = chart.graphs[0];
                    if (this.value == 0) {
                        this.value = undefined;
                    }
                }

                target[property] = this.value;
                chart.validateNow();
            });
        });
    </script>
@* &Employer post and employment *@







<!-- HTML -->
<div id="chartdiv"></div>	